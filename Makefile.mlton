
MLTON               := mlton
MLTON_FLAGS         :=

# path to the file `mlb-path-map`
ifneq ($(MLB_PATH_MAP),)
  MLTON_FLAGS       += -mlb-path-map $(MLB_PATH_MAP)
endif

SMLDOC              := smldoc

PREFIX              := /usr/local/mlton
LIBDIR              := lib/libsha3sml
DOCDIR              := doc/libsha3sml

TEST_MLB            := test/sources.mlb
LIBSHA3SML_MLBS     := libsha3sml.mlb \
                       $(TEST_MLB)

DEPENDS             := $(LIBSHA3SML_MLBS:.mlb=.mlb.d)

TYPECHECK_DUMMY     := bin/.libsha3sml


all: libsha3sml


.PHONY: libsha3sml-nodoc
libsha3sml-nodoc: src/sources.mlb $(TYPECHECK_DUMMY)


.PHONY: libsha3sml
libsha3sml: libsha3sml-nodoc doc


$(TYPECHECK_DUMMY): libsha3sml.mlb
	@echo "  [MLTON] typecheck: $<"
	@$(MLTON) $(MLTON_FLAGS) -stop tc $<
	@touch $@


# for profiling, define 'MEASURE=Timer' like:
# > make MEASURE=Timer test
src/sources.mlb: src/sources.mlb.m4
	@echo "  [M4] $@"
ifeq "$(MEASURE)" "Timer"
	@m4 -DMEASURE $< > $@
else
	@m4 $< > $@
endif


libsha3sml.mlb.d: libsha3sml.mlb
	@echo "  [GEN] $@"
	@$(SHELL) -ec '$(MLTON) '"$(MLTON_FLAGS)"' -stop f $< \
		| sed -e "1i$(TYPECHECK_DUMMY) $@:\\\\" -e "s|.*|  & \\\\|" -e "\$$s| \\\\||" > $@; \
		[ -s $@ ] || rm -rf $@'


%.mlb.d: %.mlb
	@echo "  [GEN] $@"
	@$(SHELL) -ec '$(MLTON) '"$(MLTON_FLAGS)"' -stop f $< \
		| sed -e "1i$(<:.mlb=) $@:\\\\" -e "s|.*|  & \\\\|" -e "\$$s| \\\\||" > $@; \
		[ -s $@ ] || rm -rf $@'


ifeq ($(findstring clean,$(MAKECMDGOALS)),)
  include $(DEPENDS)
endif


.PHONY: install-nodoc
install-nodoc: libsha3sml-nodoc
	@install -d $(PREFIX)/$(LIBDIR)
	@$(MLTON) $(MLTON_FLAGS) -stop f libsha3sml.mlb | \
	while read file; do \
		if expr $$(readlink -f $$file) : ^$$(pwd) >/dev/null; then \
			cp --parents $$(realpath --relative-to=$$(pwd) $$file) $(PREFIX)/$(LIBDIR); \
			echo -n . ; \
		fi; \
	done
	@echo "Installation has been completed."
	@echo "Add the entry to your mlb path map file:"
	@echo ""
	@echo "  SHA3SML $(PREFIX)/$(LIBDIR)"
	@echo ""


.PHONY: install
install: install-doc install-nodoc


.PHONY: doc
doc:
	@echo "  [SMLDoc] $(DOCDIR)"
	@$(RM) -r $(DOCDIR)
	@install -d $(DOCDIR)
	@$(SMLDOC) -c UTF-8 \
		--builtinstructure=Word8 \
		--builtinstructure=TextIO \
		--builtinstructure=VectorSlice \
		--hidebysig \
		--recursive \
		--linksource \
		-d $(DOCDIR) \
		libsha3sml.cm


.PHONY: install-doc
install-doc: doc
	@install -d $(PREFIX)/$(DOCDIR)
	@cp -prT $(DOCDIR) $(PREFIX)/$(DOCDIR)
	@echo "================================================================"
	@echo "Generated API Documents of Sha3SML"
	@echo "\t$(PREFIX)/$(DOCDIR)"
	@echo "================================================================"


$(TEST_MLB:.mlb=): %: %.mlb
	@echo "  [MLTON] $@"
	@$(MLTON) $(MLTON_FLAGS) -output $@ $<


.PHONY: test
test: $(TEST_MLB:.mlb=)
	$(TEST_MLB:.mlb=)


.PHONY: test-ignored
test-ignored: $(TEST_MLB:.mlb=)
	$(TEST_MLB:.mlb=) --ignored


.PHONY: clean
clean:
	-$(RM) src/sources.mlb
	-$(RM) $(TYPECHECK_DUMMY)
	-$(RM) $(DEPENDS)
	-$(RM) -r $(DOCDIR)
	-$(RM) $(filter-out libsha3sml,$(LIBSHA3SML_MLBS:.mlb=))
